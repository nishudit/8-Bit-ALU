$date
	Sat May 20 03:01:30 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Testbench $end
$var wire 8 ! result [7:0] $end
$var wire 1 " carryOut $end
$var reg 8 # operandA [7:0] $end
$var reg 8 $ operandB [7:0] $end
$var reg 1 % select $end
$scope module addsub $end
$var wire 8 & operandA [7:0] $end
$var wire 8 ' operandB [7:0] $end
$var wire 8 ( result [7:0] $end
$var wire 1 % select $end
$var wire 8 ) sum [7:0] $end
$var wire 1 " carryOut $end
$var wire 8 * carry [7:0] $end
$scope begin gen[1] $end
$var parameter 2 + i $end
$scope module inst $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 . carryIn $end
$var wire 1 / carryOut $end
$var wire 1 0 cin $end
$var wire 1 1 operandA $end
$var wire 1 2 operandB $end
$var wire 1 % subtract $end
$var wire 1 3 sum $end
$upscope $end
$upscope $end
$scope begin gen[2] $end
$var parameter 3 4 i $end
$scope module inst $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 carryIn $end
$var wire 1 8 carryOut $end
$var wire 1 9 cin $end
$var wire 1 : operandA $end
$var wire 1 ; operandB $end
$var wire 1 % subtract $end
$var wire 1 < sum $end
$upscope $end
$upscope $end
$scope begin gen[3] $end
$var parameter 3 = i $end
$scope module inst $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 @ carryIn $end
$var wire 1 A carryOut $end
$var wire 1 B cin $end
$var wire 1 C operandA $end
$var wire 1 D operandB $end
$var wire 1 % subtract $end
$var wire 1 E sum $end
$upscope $end
$upscope $end
$scope begin gen[4] $end
$var parameter 4 F i $end
$scope module inst $end
$var wire 1 G a $end
$var wire 1 H b $end
$var wire 1 I carryIn $end
$var wire 1 J carryOut $end
$var wire 1 K cin $end
$var wire 1 L operandA $end
$var wire 1 M operandB $end
$var wire 1 % subtract $end
$var wire 1 N sum $end
$upscope $end
$upscope $end
$scope begin gen[5] $end
$var parameter 4 O i $end
$scope module inst $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 R carryIn $end
$var wire 1 S carryOut $end
$var wire 1 T cin $end
$var wire 1 U operandA $end
$var wire 1 V operandB $end
$var wire 1 % subtract $end
$var wire 1 W sum $end
$upscope $end
$upscope $end
$scope begin gen[6] $end
$var parameter 4 X i $end
$scope module inst $end
$var wire 1 Y a $end
$var wire 1 Z b $end
$var wire 1 [ carryIn $end
$var wire 1 \ carryOut $end
$var wire 1 ] cin $end
$var wire 1 ^ operandA $end
$var wire 1 _ operandB $end
$var wire 1 % subtract $end
$var wire 1 ` sum $end
$upscope $end
$upscope $end
$scope begin gen[7] $end
$var parameter 4 a i $end
$scope module inst $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d carryIn $end
$var wire 1 e carryOut $end
$var wire 1 f cin $end
$var wire 1 g operandA $end
$var wire 1 h operandB $end
$var wire 1 % subtract $end
$var wire 1 i sum $end
$upscope $end
$upscope $end
$scope module fa[0] $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 % carryIn $end
$var wire 1 l carryOut $end
$var wire 1 m cin $end
$var wire 1 n operandA $end
$var wire 1 o operandB $end
$var wire 1 % subtract $end
$var wire 1 p sum $end
$upscope $end
$scope module fa[1] $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 % carryIn $end
$var wire 1 l carryOut $end
$var wire 1 s cin $end
$var wire 1 n operandA $end
$var wire 1 o operandB $end
$var wire 1 % subtract $end
$var wire 1 p sum $end
$upscope $end
$scope module fa[2] $end
$var wire 1 t a $end
$var wire 1 u b $end
$var wire 1 % carryIn $end
$var wire 1 l carryOut $end
$var wire 1 v cin $end
$var wire 1 n operandA $end
$var wire 1 o operandB $end
$var wire 1 % subtract $end
$var wire 1 p sum $end
$upscope $end
$scope module fa[3] $end
$var wire 1 w a $end
$var wire 1 x b $end
$var wire 1 % carryIn $end
$var wire 1 l carryOut $end
$var wire 1 y cin $end
$var wire 1 n operandA $end
$var wire 1 o operandB $end
$var wire 1 % subtract $end
$var wire 1 p sum $end
$upscope $end
$scope module fa[4] $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 % carryIn $end
$var wire 1 l carryOut $end
$var wire 1 | cin $end
$var wire 1 n operandA $end
$var wire 1 o operandB $end
$var wire 1 % subtract $end
$var wire 1 p sum $end
$upscope $end
$scope module fa[5] $end
$var wire 1 } a $end
$var wire 1 ~ b $end
$var wire 1 % carryIn $end
$var wire 1 l carryOut $end
$var wire 1 !" cin $end
$var wire 1 n operandA $end
$var wire 1 o operandB $end
$var wire 1 % subtract $end
$var wire 1 p sum $end
$upscope $end
$scope module fa[6] $end
$var wire 1 "" a $end
$var wire 1 #" b $end
$var wire 1 % carryIn $end
$var wire 1 l carryOut $end
$var wire 1 $" cin $end
$var wire 1 n operandA $end
$var wire 1 o operandB $end
$var wire 1 % subtract $end
$var wire 1 p sum $end
$upscope $end
$scope module fa[7] $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 % carryIn $end
$var wire 1 l carryOut $end
$var wire 1 '" cin $end
$var wire 1 n operandA $end
$var wire 1 o operandB $end
$var wire 1 % subtract $end
$var wire 1 p sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 a
b110 X
b101 O
b100 F
b11 =
b10 4
b1 +
$end
#0
$dumpvars
0'"
1&"
0%"
0$"
1#"
0""
0!"
1~
0}
0|
1{
0z
0y
1x
0w
0v
1u
0t
0s
1r
0q
1p
1o
0n
0m
0l
1k
0j
1i
0h
1g
0f
0e
0d
0c
1b
1`
1_
0^
0]
0\
0[
1Z
0Y
1W
0V
1U
0T
0S
0R
0Q
1P
1N
1M
0L
0K
0J
0I
1H
0G
1E
0D
1C
0B
0A
0@
0?
1>
1<
1;
0:
09
08
07
16
05
13
02
11
00
0/
0.
0-
1,
b0 *
b11111111 )
b11111111 (
b1010101 '
b10101010 &
0%
b1010101 $
b10101010 #
0"
b11111111 !
$end
#10
0K
0I
0A
1E
0B
0@
08
1<
09
07
1"
0/
1e
13
0i
00
0.
1T
1R
1]
1[
1f
1d
0l
1J
1W
1S
b11110000 *
1\
0N
1`
0k
0r
0u
0x
0{
0~
0#"
0&"
b1101111 !
b1101111 (
b1101111 )
1p
1-
1?
1Q
1c
0;
0M
0_
0,
01
0>
0C
1G
1L
1Y
1^
0b
0g
1m
1s
1v
1y
1|
1!"
1$"
1'"
1%
b1 $
b1 '
b1110000 #
b1110000 &
#20
1"
1e
0i
1f
1d
1\
1]
1[
1S
1T
1R
10
1.
1J
19
17
1B
1@
1K
1I
1l
0N
1/
18
b11111111 *
1A
03
0<
0E
0W
0`
b0 !
b0 (
b0 )
0p
0-
06
0?
0H
12
1;
1D
1M
1,
11
15
1:
1>
1C
0P
0U
0Y
0^
1j
1q
1t
1w
1z
1}
1""
1%"
1n
b11111 $
b11111 '
b11111 #
b11111 &
#30
0]
0[
0S
0B
0@
0K
0I
0T
0R
08
0A
b11000011 *
0J
13
0W
1<
0E
1N
b10110 !
b10110 (
b10110 )
0`
1-
1H
0Q
02
0M
1V
05
0:
0>
0C
0G
0L
1Y
1^
b101101 $
b101101 '
b1000011 #
b1000011 &
#40
0<
09
07
0/
1`
00
0.
1]
1[
0l
13
0N
b11100000 *
1S
0W
b1000011 !
b1000011 (
b1000011 )
1p
0-
0H
1Q
12
1M
0V
1P
1U
0j
0q
0t
0w
0z
0}
0""
0%"
0n
b11111 $
b11111 '
b1100010 #
b1100010 &
#50
1W
1T
1R
b11110000 *
1J
03
0N
b11100001 !
b11100001 (
b11100001 )
1i
1H
0M
0,
01
1G
1L
1b
1g
b1111 $
b1111 '
b11110000 #
b11110000 &
#60
